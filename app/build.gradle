apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.neenbedankt.android-apt'

/* Define Gradle variables */
final APPLICATION_ID = 'com.example.commonframe'
final COMPILE_SDK_VERSION = '23'
final BUILD_TOOL_VERSION = '23.0.3'
final MIN_SDK_VERSION = '17'
final TARGET_SDK_VERSION = '23'
final PLAY_SERVICE_LIB_VERSION = '9.0.2'
final SUPPORT_LIB_VERSION = '24.0.0'
final BUTTER_KNIFE_LIB_VERSION = '8.0.1'
final ICE_PICK_LIB_VERSION = '3.2.0'

android {
    compileSdkVersion "Google Inc.:Google APIs:${COMPILE_SDK_VERSION}"
    buildToolsVersion "${BUILD_TOOL_VERSION}"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.example.houserental"
        minSdkVersion 17
        targetSdkVersion 19
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "${APPLICATION_ID}"
        minSdkVersion "${MIN_SDK_VERSION}"
        targetSdkVersion "${TARGET_SDK_VERSION}"
    }

//    signingConfigs {
//        debug {
//            storeFile file(DEBUG_STORE_FILE)
//            storePassword(DEBUG_STORE_PASSWORD)
//            keyAlias(DEBUG_KEY_ALIAS)
//            keyPassword(DEBUG_KEY_PASSWORD)
//        }
//        release {
//            storeFile file(STORE_FILE)
//            storePassword(STORE_PASSWORD)
//            keyAlias(KEY_ALIAS)
//            keyPassword(KEY_PASSWORD)
//        }
//    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            debuggable true
//            signingConfig signingConfig.debug
        }
        release {
            minifyEnabled true
            debuggable false
//            signingConfig signingConfig.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }

}



dependencies {

    /* LOCAL LIBRARIES */
    compile project(':activeandroid')
    compile project(':googlevolleynetwork_lib')

    /* CORE GOOGLE ANDROID */
    compile "com.google.android.gms:play-services-gcm:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-maps:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.google.android.gms:play-services-base:${PLAY_SERVICE_LIB_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"

    /* NETWORK */
    compile 'commons-net:commons-net:3.3'
    compile('org.apache.httpcomponents:httpmime:4.3.6') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'

    /* UTILITIES */
    compile 'ch.acra:acra:4.6.2'
    compile 'com.google.code.gson:gson:2.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile "com.jakewharton:butterknife:${BUTTER_KNIFE_LIB_VERSION}"
    apt "com.jakewharton:butterknife-compiler:${BUTTER_KNIFE_LIB_VERSION}"
    compile "frankiesardo:icepick:${ICE_PICK_LIB_VERSION}"
    provided "frankiesardo:icepick-processor:${ICE_PICK_LIB_VERSION}"

    /* LEAK DETECTION */
//    compile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
//        debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
//        releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    /* SOCIAL NETWORK */
//        compile 'com.facebook.android:facebook-android-sdk:4.1.0'
//        compile('com.twitter.sdk.android:twitter:1.3.2@aar') {
//            transitive = true;
//        }

}
